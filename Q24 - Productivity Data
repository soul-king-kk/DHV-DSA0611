# Load necessary libraries
library(ggplot2)
library(plotly)

# Create the data frame
data <- data.frame(
  Employee = c("A", "B", "C", "D", "E"),
  HoursWorked = c(40, 35, 45, 38, 42),
  TasksCompleted = c(10, 8, 12, 9, 11),
  Efficiency = c(80, 75, 85, 78, 82)
)

# 1. Variation of efficiency with both hours worked and tasks completed among employees

# 2. Create a 3D scatter plot
plot_ly(data, x = ~TasksCompleted, y = ~HoursWorked, z = ~Efficiency, type = 'scatter3d', mode = 'markers') %>%
  layout(scene = list(
    xaxis = list(title = 'Tasks Completed'),
    yaxis = list(title = 'Hours Worked'),
    zaxis = list(title = 'Efficiency (%)')
  ))

# 3. Correlation between efficiency, tasks completed, and hours worked based on the 3D plot
# Visual inspection for correlation. For more precise correlation, calculate correlation coefficients.
cor(data$TasksCompleted, data$Efficiency)
cor(data$HoursWorked, data$Efficiency)

# 4. Generate a 3D surface plot

# Create a grid of values
tasks_seq <- seq(min(data$TasksCompleted), max(data$TasksCompleted), length.out = 30)
hours_seq <- seq(min(data$HoursWorked), max(data$HoursWorked), length.out = 30)

# Generate a grid of efficiency values
efficiency_grid <- outer(tasks_seq, hours_seq, function(t, h) {
  predict(lm(Efficiency ~ TasksCompleted + HoursWorked, data = data), newdata = data.frame(TasksCompleted = t, HoursWorked = h))
})

# Convert the grid to a data frame for plotting
grid_df <- expand.grid(TasksCompleted = tasks_seq, HoursWorked = hours_seq)
grid_df$Efficiency <- as.vector(efficiency_grid)

# 3D surface plot
plot_ly(grid_df, x = ~TasksCompleted, y = ~HoursWorked, z = ~Efficiency, type = 'surface') %>%
  layout(scene = list(
    xaxis = list(title = 'Tasks Completed'),
    yaxis = list(title = 'Hours Worked'),
    zaxis = list(title = 'Efficiency (%)')
  ))

# 5. Compare the 3D plots of efficiency against both tasks completed and hours worked separately.

# 3D scatter plot for Tasks Completed vs Efficiency
plot_ly(data, x = ~TasksCompleted, y = ~Efficiency, z = ~HoursWorked, type = 'scatter3d', mode = 'markers') %>%
  layout(scene = list(
    xaxis = list(title = 'Tasks Completed'),
    yaxis = list(title = 'Efficiency (%)'),
    zaxis = list(title = 'Hours Worked')
  ))

# 3D scatter plot for Hours Worked vs Efficiency
plot_ly(data, x = ~HoursWorked, y = ~Efficiency, z = ~TasksCompleted, type = 'scatter3d', mode = 'markers') %>%
  layout(scene = list(
    xaxis = list(title = 'Hours Worked'),
    yaxis = list(title = 'Efficiency (%)'),
    zaxis = list(title = 'Tasks Completed')
  ))

# Output the code
cat('R code successfully executed and 3D plots generated.')
